{"version":3,"sources":["actions/LocationAction.js","actions/WeatherActions.js","actions/GetDailyForecasrt.js","actions/APISuccess.js","actions/APIFailed.js","apis/APIData.js","Additionals/Objects.js","components/Layout/SearchBar.js","Additionals/Helpers.js","components/Favorites/FavoriteSymbol.js","components/Weather/WeatherMetaData.js","components/Forecast/ForecastCard.js","components/Forecast/ForeCastContainer.js","components/Layout/Spinner.js","actions/AddToFavorites.js","actions/removeFromFavorites.js","components/Weather/WeatherContainer.js","components/Home/Home.js","components/Favorites/FavoriteCard.js","components/Favorites/Favorites.js","components/Layout/Menu.js","components/Toggles/TempatureToggle.js","components/Toggles/ThemeToggle.js","actions/SetTempatureUnit.js","actions/SetTheme.js","components/Toggles/Toggles.js","components/Layout/Header.js","components/App.js","reducers/WeatherReducer.js","reducers/LocationReducer.js","reducers/ForecastReducer.js","reducers/favoriteReducer.js","reducers/index.js","reducers/APIstate.js","reducers/TemptureReducer.js","reducers/ThemeReducer.js","index.js"],"names":["GetGeoLocationAction","LocationObject","type","payload","GetCurrentWeatherAction","WeatherObject","GetFiveDayForeCastAction","text","GetAPISuccess","GetAPIFailure","apikey","GetAutoCompleteSearchText","GetCurrentWeather","locationKey","GetDailyForecastlocationKey","GetGeoLocation","lat","long","SetLocaionObject","Key","Name","contryName","isFavorite","cityName","SetWeatherObject","WeatherText","WeatherIcon","MetricVal","ImperialVal","Temperature","Metric","Value","Unit","Imperial","SetForecastObject","Headline","DailyForecasts","SearchBar","props","onChange","e","value","preventDefault","locationObj","state","cityNames","filter","CreateLocationObject","handleInputChange","searchQuery","setState","term","length","getInfo","results","a","fetch","then","res","json","catch","error","handleWithAPIError","data","map","getAttributesFromData","Popup","alert","key","LocalizedName","Country","Container","style","paddingTop","className","Dropdown","placeholder","fluid","search","selection","this","onSearchChange","options","React","Component","GetIconPath","FavoriteSymbol","handleOnClick","SetIfFavorite","trigger","Icon","name","size","color","onClick","content","position","WeatherTextStyle","textAlign","fontSize","fontWeight","WeatherMetaData","TempatureUnit","Tempature","Grid","Row","verticalAlign","columns","Column","as","Image","src","Content","Subheader","ForecastCard","convertDegree","Math","round","day","Minimum","echoTime","Card","padding","EpochDate","Date","toLocaleDateString","weekday","icon","Day","List","divided","horizontal","Item","paddingBottom","ForeCastContainer","dailyForecast","Group","itemsPerRow","Spinner","msg","defaultProps","AddToFavorites","weatherObj","removeFromFavorites","WeatherContainer","renderErrorMsg","renderWeatherDetails","ContainerStyle","centered","cityKey","APIstate","connect","Location","Weather","Forecast","EffectiveEpochDate","dispatch","bindActionCreators","Home","renderContent","FavoriteCard","GoToMainScreen","city","goBack","cardStyle","Description","cityNameStyle","Meta","DaterStyle","year","month","Header","TempatureStyle","ImgStyle","extra","Button","basic","width","height","borderStyle","borderColor","left","marginLeft","Favorites","renderNoCards","NoLocationsStyle","renderCards","favoritesCities","history","push","MainMenu","Navbar","id","Nav","to","TempatureToggle","SetTempatureUnit","Checkbox","label","toggle","ThemeToggle","SetTheme","unit","Toggles","headerTitle","margin","display","fontFamily","Menu","App","GetUserLocation","response","UserLocationObject","GetCurrentWeatherByLocation","CurrentWeatherObject","CreateWeatherObject","GetCurrentWeatherForecast","ForecastObject","CreateForecastObject","Theme","exact","path","render","window","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","UserLocation","INITIAL_STATE","UnitType","Latitude","Longitude","combineReducers","action","Object","assign","concat","x","ReactDOM","store","createStore","reducers","composeWithDevTools","document","querySelector"],"mappings":"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","file":"static/js/main.0f8800a9.chunk.js","sourcesContent":["\r\nexport const GetGeoLocationAction=(LocationObject)=>{\r\n    return{\r\n        type:'GET_GEO_LOCATION',\r\n        payload:LocationObject\r\n    };\r\n};","\r\nexport const GetCurrentWeatherAction=(WeatherObject)=>{\r\n    return{\r\n        type:'GET_CURRENT_WEATHER',\r\n        payload:WeatherObject\r\n    };\r\n};\r\n","export const GetFiveDayForeCastAction=(text)=>{\r\n    return{\r\n        type:'GET_FIVE_DAY_FORECAST',\r\n        payload:text\r\n    };\r\n};","export const GetAPISuccess=()=>{\r\n    return{\r\n        type:'SUCCESS',\r\n        payload:null\r\n    };\r\n};","export const GetAPIFailure=()=>{\r\n    return{\r\n        type:'FAILED',\r\n        payload:null\r\n    };\r\n};"," const apikey=\"DUr85WjeVVEYey5aLEGjGAaqvBzTK8cA\";\r\n //const apikey=\"RDoW7sTfu9F4x00uvyNi8wBypvRmdvx6\";\r\n\r\nexport const GetAutoCompleteSearchText=(text)=>{\r\n  return \"http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=\"+apikey+\"&q=\"+text\r\n}\r\n\r\nexport const GetCurrentWeather=(locationKey)=>{\r\n  return \"http://dataservice.accuweather.com/currentconditions/v1/\"+locationKey+\"?apikey=\"+apikey\r\n}\r\nexport const GetDailyForecastlocationKey=(locationKey)=>{\r\n  return \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\"+locationKey+\"?apikey=\"+apikey\r\n}\r\n\r\nexport const GetGeoLocation=(lat,long)=>{\r\n   \r\n    return \"http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=\"+apikey+\"&q=\"+lat+\"%2C\"+long\r\n}\r\n\r\nexport const GetDefaultLocation=()=>{\r\n   return {\r\n        \"Key\":\"215793\",\r\n        \"LocalizedName\":\"Tel-aviv\",\r\n        \"Country\":{\r\n            \"LocalizedName\":\"Israel\",\r\n        }\r\n      }\r\n    }","export const SetLocaionObject=(Key='',Name='',contryName='',isFavorite=false)=>{\r\n    return{\r\n        Key:Key,\r\n        cityName:Name,\r\n        contryName:contryName,\r\n        isFavorite:isFavorite,\r\n        \r\n    }\r\n}\r\n\r\nexport const SetWeatherObject=(WeatherText='',WeatherIcon='',MetricVal='',ImperialVal='')=>{\r\n    return{\r\n        WeatherText:WeatherText,\r\n        WeatherIcon:WeatherIcon,\r\n        Temperature:{\r\n            Metric:{\r\n                Value:MetricVal,\r\n                Unit:\"C\",\r\n            },\r\n            Imperial:{\r\n                Value:ImperialVal,\r\n                Unit:\"F\",\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nexport const SetForecastObject=(Headline=null,DailyForecasts=null)=>{\r\n    return{\r\n        Headline:Headline,\r\n        DailyForecasts:DailyForecasts\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Container, Dropdown} from 'semantic-ui-react'\r\nimport Popup from 'react-popup';\r\n\r\nimport {GetAutoCompleteSearchText}from '../../apis/APIData';\r\n\r\nclass SearchBar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            term:'',\r\n            results:[],\r\n            cityNames:[]\r\n        };\r\n    }\r\n \r\n    onChange=(e, { value })=> {\r\n        e.preventDefault();\r\n        var locationObj= this.state.cityNames.filter(e=>e.Key===value);\r\n        this.props.CreateLocationObject(locationObj[0]);\r\n    }\r\n    handleInputChange = (e, { searchQuery }) => {  \r\n        if (searchQuery !== \"\") {\r\n        this.setState({\r\n            term: searchQuery\r\n        }, () => {\r\n            if (this.state.term && this.state.term.length > 1) {\r\n                if (this.state.term.length % 2 === 0) \r\n                this.getInfo()\r\n            }})\r\n        } else {\r\n            this.setState({ results: [] })\r\n        }\r\n  }\r\n\r\n    getInfo = async() => {\r\n        await fetch(GetAutoCompleteSearchText(this.state.term))\r\n        .then(res => res.json())\r\n        .catch(error=>this.handleWithAPIError(error))\r\n        .then(data=>{\r\n        this.setState({\r\n            cityNames: data,\r\n            results: data.map(this.getAttributesFromData)\r\n            });    \r\n   })}\r\n \r\n   getAttributesFromData(data){\r\n       return{\r\n            key: data.Key,\r\n            text:data.LocalizedName+\" , \"+data.Country.LocalizedName,\r\n            value: data.Key\r\n        }\r\n    }\r\n\r\n    handleWithAPIError=(error)=>{\r\n        this.props.GetAPIFailure();\r\n        Popup.alert('Sorry, but the API request reached the 50 per day limit :(');\r\n        }\r\n\r\n    render(){\r\n        return(\r\n            <Container style={{paddingTop:\"25px\"}}>\r\n                <form className=\"ui form\"> \r\n                    <div className=\"field\"> \r\n                    <Dropdown\r\n                        placeholder='type a city'\r\n                        fluid\r\n                        search\r\n                        selection\r\n                        value={this.state.term}\r\n                        onSearchChange={this.handleInputChange}\r\n                        onChange={this.onChange}\r\n                        options={this.state.results}\r\n                    />                      \r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default SearchBar;","export const GetIconPath=(WeatherIcon)=>{\r\n    return WeatherIcon<10 ?'./icons/0'+WeatherIcon+\"-s.png\":'./icons/'+WeatherIcon+\"-s.png\";\r\n\r\n}\r\nexport const ConvertEchoTimeToDay=(echoTime)=>{\r\n    return (new Date(echoTime * 1000)).toLocaleDateString('en-us', { weekday: 'long' });\r\n}\r\n\r\nexport const ConvertEchoDateToTimeAndDay=(echoTime)=>{\r\n    const options = {\r\n        weekday: \"long\",\r\n        year: \"numeric\",\r\n        month:\"long\",\r\n        day:\"numeric\"\r\n    }\r\n    return (new Date(echoTime * 1000)).toLocaleDateString('en-us',options);\r\n}","import React from 'react';\r\nimport {Icon, Popup} from 'semantic-ui-react';\r\n\r\nclass FavoriteSymbol extends React.Component{\r\n\r\n    handleOnClick=()=>{\r\n        this.props.SetIfFavorite();\r\n    }\r\n    render(){\r\n        const{isFavorite}=this.props;\r\n        return(\r\n            <div>\r\n                {isFavorite &&\r\n                 <Popup\r\n                  trigger={\r\n                <Icon name =\"star\" size='big' color=\"yellow\"\r\n                onClick={this.handleOnClick}\r\n                />\r\n                  }\r\n                  content='Remove from favorites'\r\n                  position='right center'\r\n                />\r\n                }\r\n                {\r\n                   !isFavorite &&\r\n                   <Popup\r\n                        trigger={\r\n                        <Icon name =\"star outline\" size='big' color=\"yellow\"\r\n                            onClick={this.handleOnClick}\r\n                        />\r\n                            }\r\n                            content='Add to favorites'\r\n                            position='right center'\r\n                    />\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default FavoriteSymbol;","import React from 'react';\r\nimport {Header,Grid,Image} from 'semantic-ui-react';\r\nimport {GetIconPath} from '../../Additionals/Helpers';\r\nimport FavoriteSymbol from '../Favorites/FavoriteSymbol';\r\n\r\nconst WeatherMetaData=({TempatureUnit,WeatherIcon,cityName,contryName,WeatherText,isFavorite,SetIfFavorite,Tempature})=>{\r\n    return(\r\n        <div>\r\n            <Grid>\r\n                <Grid.Row verticalAlign=\"middle\" columns={3}>\r\n                    <Grid.Column textAlign=\"left\">\r\n                        <Header as='h1'>\r\n                            <Image src={GetIconPath((WeatherIcon))} />\r\n                            <Header.Content>\r\n                                {cityName}\r\n                                <Header.Subheader>{contryName}</Header.Subheader>\r\n                                <Header.Subheader>\r\n                                    {TempatureUnit===true ? Tempature.Metric.Value + \"° C\":Tempature.Imperial.Value + \"° F\" }\r\n                                </Header.Subheader>\r\n                            </Header.Content>\r\n                        </Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column  >\r\n                        <div style={WeatherTextStyle}>\r\n                            {WeatherText}\r\n                        </div>\r\n                    </Grid.Column>\r\n                    <Grid.Column  >\r\n                       <FavoriteSymbol isFavorite={isFavorite} SetIfFavorite={SetIfFavorite}/>\r\n                    </Grid.Column>\r\n                </Grid.Row> \r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst WeatherTextStyle={\r\n   textAlign:'center',\r\n    fontSize:'2.5rem',\r\n    fontWeight:\"bold\",\r\n}\r\n\r\nexport default WeatherMetaData;","import React from 'react';\r\nimport {Card,Header,Image,List} from 'semantic-ui-react';\r\nimport {ConvertEchoTimeToDay,GetIconPath} from '../../Additionals/Helpers';\r\n\r\nclass ForecastCard extends React.Component{\r\n   \r\n    convertDegree=()=>{\r\n        return Math.round( (5*(this.props.day.Temperature.Minimum.Value-32)/9));\r\n    }\r\n    render(){\r\n        const {day,TempatureUnit}=this.props;\r\n        return(\r\n            <Card>\r\n                <h3 style={{textAlign:\"center\",padding:'5px'}} >\r\n                    {ConvertEchoTimeToDay(day.EpochDate)}\r\n                </h3>\r\n                <Card.Content>\r\n                    <Header as=\"h3\" icon textAlign=\"center\">\r\n                        <Image src={GetIconPath(day.Day.Icon)} />\r\n                    </Header>\r\n                    <Header.Content  style={{textAlign:\"center\"}}>\r\n                        <List divided horizontal size=\"large\" >\r\n                            <List.Item >\r\n                               <div style={{paddingBottom:\"15px\"}}>\r\n                                    min\r\n                               </div>\r\n                               {TempatureUnit!==true ? day.Temperature.Minimum.Value + \"° F\"  :this.convertDegree() + \"° C\" }\r\n                            </List.Item>\r\n\r\n                            <List.Item >\r\n                                <div style={{paddingBottom:\"15px\"}}>\r\n                                    max\r\n                                </div>\r\n                                {TempatureUnit!==true ? day.Temperature.Minimum.Value + \"° F\"  :this.convertDegree() + \"° C\" }\r\n                            </List.Item>\r\n                        </List>\r\n                    </Header.Content>\r\n                </Card.Content>\r\n            </Card>\r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default ForecastCard;","import React from 'react';\r\nimport {Grid,Container,Card} from 'semantic-ui-react';\r\nimport ForecastCard from './ForecastCard';\r\nconst ForeCastContainer=({dailyForecast,TempatureUnit})=>{\r\n    return(\r\n        <Grid.Column>\r\n            <Container>\r\n                <Card.Group itemsPerRow={5}>\r\n                    {dailyForecast.map((day)=>\r\n                         <ForecastCard \r\n                         key={day.EpochDate} \r\n                         day={day}\r\n                         TempatureUnit={TempatureUnit}/>)}\r\n                </Card.Group>\r\n            </Container>\r\n        </Grid.Column>\r\n    );\r\n    \r\n};\r\n\r\nexport default ForeCastContainer;","import React from 'react';\r\n\r\nconst Spinner=(props)=>{\r\n    return(\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">{props.msg}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps={\r\n    msg:'Loading...'\r\n};\r\nexport default Spinner;","export const AddToFavorites=(weatherObj)=>{\r\n    return{\r\n        type:'ADD_TO_FAVORITES',\r\n        payload:weatherObj\r\n    };\r\n};","export const removeFromFavorites=(key)=>{\r\n    return{\r\n        type:'REMOVE_FROM_FAVORITES',\r\n        payload:key\r\n    };\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport { Container ,Grid} from 'semantic-ui-react';\r\nimport WeatherMetaData from './WeatherMetaData';\r\nimport ForeCastContainer from '../Forecast/ForeCastContainer';\r\nimport Spinner from '../Layout/Spinner';\r\nimport {AddToFavorites} from '../../actions/AddToFavorites';\r\nimport {removeFromFavorites} from '../../actions/removeFromFavorites';\r\n class WeatherContainer extends React.Component{\r\n\r\n\r\n    renderErrorMsg=()=>{\r\n        return(\r\n            <div>\r\n                Failed getting data \r\n            </div>\r\n        );\r\n    }\r\n\r\n    SetIfFavorite(){\r\n        if(!this.props.isFavorite){\r\n            this.props.AddToFavorites({\r\n                key:this.props.cityKey,\r\n                cityName:this.props.cityName,\r\n                WeatherIcon:this.props.WeatherIcon,\r\n                WeatherText:this.props.WeatherText,\r\n                Tempature:this.props.Tempature,\r\n                Date:this.props.Date,\r\n                contryName:this.props.contryName\r\n            })\r\n        }\r\n        else{\r\n            this.props.removeFromFavorites(this.props.cityKey);\r\n        }\r\n    }\r\n    renderWeatherDetails=()=>{\r\n       return(\r\n            <Container style={ContainerStyle}> \r\n                <WeatherMetaData \r\n                WeatherIcon={this.props.WeatherIcon}\r\n                cityName={this.props.cityName}\r\n                contryName={this.props.contryName}\r\n                TempatureUnit={this.props.TempatureUnit}\r\n                Tempature={this.props.Tempature}\r\n                WeatherText={this.props.WeatherText}\r\n                isFavorite={this.props.isFavorite} \r\n                SetIfFavorite={()=>this.SetIfFavorite()}\r\n                />\r\n                <Grid centered style={{paddingTop:\"25px\"}}>\r\n                    <Grid.Row>\r\n                        <ForeCastContainer \r\n                        dailyForecast={this.props.dailyForecast} \r\n                        TempatureUnit={this.props.TempatureUnit}\r\n                      />  \r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Container>\r\n       )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"ui row\">\r\n                <div className=\"ui column\">\r\n                    { this.props.APIstate==='Loading'? <Spinner msg=\"waiting..\"/>\r\n                    :\r\n                    this.props.APIstate==='SUCCESS'?this.renderWeatherDetails():this.renderErrorMsg()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n }\r\n\r\nconst ContainerStyle={\r\n    paddingTop:'40px'\r\n} \r\n\r\n\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators(\r\n        {\r\n            AddToFavorites:AddToFavorites,\r\n            removeFromFavorites:removeFromFavorites\r\n        },dispatch)\r\n    }\r\n\r\nfunction mapsStateToProps(state){\r\n    return{\r\n        cityName:state.Location.cityName,\r\n        contryName:state.Location.contryName,\r\n        cityKey:state.Location.Key,\r\n        WeatherIcon:state.Weather.WeatherIcon,\r\n        WeatherText:state.Weather.WeatherText,\r\n        Tempature:state.Weather.Temperature,\r\n        APIstate:state.APIstate,\r\n        dailyForecast:state.Forecast.DailyForecasts,\r\n        isFavorite:state.Location.isFavorite,\r\n        Date:state.Forecast.Headline.EffectiveEpochDate,\r\n        TempatureUnit:state.TempatureUnit,\r\n    }\r\n\r\n }\r\n\r\n export default connect(mapsStateToProps,matchDispatchToProps)(WeatherContainer);","import React from 'react';\r\nimport {Container} from 'semantic-ui-react';\r\nimport SearchBar from '../Layout/SearchBar';\r\nimport WeatherContainer from '../Weather/WeatherContainer';\r\n\r\n\r\nclass Home extends React.Component{\r\n    \r\n    renderContent=()=>{\r\n        return(\r\n            <div>\r\n                <SearchBar \r\n                CreateLocationObject={this.props.CreateLocationObject}\r\n                GetAPIFailure={this.props.GetAPIFailure}/>\r\n                <WeatherContainer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                 {this.renderContent()}      \r\n            </Container>\r\n                    \r\n        );\r\n    }  \r\n};\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {removeFromFavorites} from '../../actions/removeFromFavorites';\r\nimport { Card ,Image,Button} from 'semantic-ui-react';\r\nimport {GetIconPath,ConvertEchoDateToTimeAndDay} from '../../Additionals/Helpers';\r\n\r\nclass FavoriteCard extends React.Component{\r\n    \r\n\r\n    GoToMainScreen=()=>{   \r\n        var locationObj={\r\n            Key:this.props.city.key,\r\n            LocalizedName:this.props.city.cityName,\r\n            Country:{\r\n                LocalizedName:this.props.city.contryName\r\n            },\r\n            isFavorite:true\r\n        }\r\n        this.props.CreateLocationObject(locationObj);\r\n        this.props.goBack('/');\r\n    }\r\n\r\n    render(){\r\n        const {city,TempatureUnit}=this.props;\r\n        return(\r\n            <Card style={cardStyle}>\r\n            <Card.Content>\r\n                <Card.Description style={cityNameStyle}>\r\n                    <strong>{city.cityName}</strong>\r\n                </Card.Description>\r\n                <Card.Meta style={DaterStyle}>{ConvertEchoDateToTimeAndDay(city.Date)}</Card.Meta>\r\n                <Card.Header style={TempatureStyle}>{TempatureUnit===true ? city.Tempature.Metric.Value + \"° C\":city.Tempature.Imperial.Value + \"° F\" }</Card.Header>\r\n                <Image size=\"small\" style={ImgStyle}  src={GetIconPath((city.WeatherIcon))} />\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <div className='ui two buttons'>\r\n                    <Button \r\n                    basic color='green'\r\n                    onClick={this.GoToMainScreen}>\r\n                        Go To\r\n                    </Button>\r\n                    <Button \r\n                    basic color='red' \r\n                    onClick={()=>this.props.removeFromFavorites(city.key)}>\r\n                        Remove\r\n                    </Button>\r\n                </div>\r\n            </Card.Content>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nconst cardStyle={\r\n    width: \"240px\",\r\n    height: \"320px\",\r\n    padding:\"20px\",\r\n    borderStyle:\"solid\",\r\n    borderColor:\"#0b0c40\"\r\n}\r\nconst cityNameStyle={\r\n    padding:\"5px\",\r\n    textAlign:\"center\",\r\n    fontSize:\"25px\"\r\n}\r\nconst DaterStyle={\r\n    padding:\"5px\",\r\n    textAlign:\"center\",\r\n    fontSize:\"1em\"\r\n}\r\nconst TempatureStyle={\r\n    fontSize:\"2.3em\",\r\n    padding:\"5px\",\r\n    textAlign:\"center\"\r\n}\r\nconst ImgStyle={\r\n    padding:\"3px\",\r\n    position: \"absolute\",\r\n    left: \"40%\",\r\n    marginLeft:\"-50px\"\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({\r\n        removeFromFavorites:removeFromFavorites\r\n    },dispatch);\r\n}\r\n\r\nexport default connect(null,matchDispatchToProps)(FavoriteCard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Container,Card,Grid} from 'semantic-ui-react';\r\nimport Spinner from '../Layout/Spinner';\r\nimport FavoriteCard from './FavoriteCard';\r\nclass Favorites extends React.Component{\r\n    \r\n    renderErrorMsg=()=>{\r\n        return(\r\n            <div>\r\n                Failed getting data \r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderNoCards=()=>{\r\n        return(\r\n            <Container>\r\n                <div style={NoLocationsStyle}>\r\n                   No favorite locations\r\n                </div>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n\r\n    renderCards=()=>{\r\n        return(\r\n            <Container>\r\n                <Grid centered style={{paddingTop:\"25px\"}}>\r\n                    <Grid.Column>\r\n                        <Container>\r\n                            <Card.Group>\r\n                                {this.props.favoritesCities.map((city)=>\r\n                                <FavoriteCard \r\n                                key={city.key} \r\n                                city={city} \r\n                                CreateLocationObject={this.props.CreateLocationObject}\r\n                                goBack={this.props.history.push}\r\n                                TempatureUnit={this.props.TempatureUnit}\r\n                                />)}\r\n                            </Card.Group>\r\n                        </Container>\r\n                    </Grid.Column>\r\n                </Grid>\r\n        </Container>\r\n           \r\n        );\r\n    }\r\n\r\n    renderContent=()=>{\r\n        return this.props.favoritesCities.length>0? this.renderCards(): this.renderNoCards()\r\n        \r\n   }\r\n    render(){\r\n        const{APIstate}=this.props\r\n        return(\r\n            <div>\r\n               <div className=\"ui row\">\r\n                    <div className=\"ui column\">\r\n                        {APIstate==='Loading'? <Spinner msg=\"waiting..\"/>\r\n                        :\r\n                        APIstate==='SUCCESS'?this.renderContent():this.renderErrorMsg()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nconst NoLocationsStyle={\r\n    fontWeight:\"solid\", \r\n    fontSize:\"30px\",\r\n    padding:\"25px\"\r\n}\r\n\r\n\r\nfunction mapsStateToProps(state){\r\n    return{\r\n        favoritesCities:state.Favorites,\r\n        APIstate:state.APIstate,\r\n        TempatureUnit:state.TempatureUnit,\r\n    }\r\n }\r\n\r\n export default connect(mapsStateToProps,null)(Favorites);\r\n","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Container } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\nclass MainMenu extends React.Component {  \r\n  render()\r\n  {\r\n    return(\r\n      <Container className=\"navbar-container\" style={{paddingTop:\"25px\"}}>\r\n        <Navbar id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\" >\r\n            <Link to=\"/\">\r\n                <h1 className=\"title active\">Home</h1>\r\n            </Link>\r\n        </Nav>\r\n        <Nav className='second-item-right'>\r\n            <Link to=\"/Favorites\">\r\n                <h1 className=\"title active\">Favorites</h1>\r\n            </Link>\r\n        </Nav>\r\n    </Navbar>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n export default MainMenu;","import React from 'react';\r\nimport { Checkbox } from 'semantic-ui-react'\r\n\r\nconst TempatureToggle=({SetTempatureUnit})=>{\r\n    return(\r\n         <Checkbox\r\n         label=\"F° | C°\" \r\n         toggle \r\n         onChange={SetTempatureUnit}/>\r\n        );\r\n}\r\n\r\nexport default TempatureToggle;","import React from 'react';\r\nimport { Checkbox } from 'semantic-ui-react'\r\n\r\nconst ThemeToggle=({SetTheme})=>{\r\n   \r\n    return(\r\n        <Checkbox\r\n         label=\"Light | Dark\" \r\n         toggle \r\n         onChange={SetTheme}/>\r\n        );\r\n}\r\n\r\nexport default ThemeToggle;","export const SetTempatureUnit=(unit)=>{\r\n    return{\r\n        type:'SET_TEMPATURE_UNIT',\r\n        payload:unit\r\n    };\r\n};","export const SetTheme=()=>{\r\n    return{\r\n        type:'SET_THEME',\r\n        payload:null\r\n    };\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport { Container, Grid } from 'semantic-ui-react';\r\nimport TempatureToggle from './TempatureToggle';\r\nimport ThemeToggle from './ThemeToggle';\r\nimport {SetTempatureUnit}from \"../../actions/SetTempatureUnit\";\r\nimport {SetTheme}from \"../../actions/SetTheme\";\r\n\r\nclass Toggles extends React.Component{\r\n \r\n    render(){\r\n        return(\r\n           <Container style={{padding:\"40px\"}}>\r\n               <Grid>\r\n                   <Grid.Row columns={2}>\r\n                     <Grid.Column >\r\n                        <TempatureToggle SetTempatureUnit={this.props.SetTempatureUnit}/>\r\n                    </Grid.Column>\r\n                    <Grid.Column >\r\n                        <ThemeToggle SetTheme={this.props.SetTheme}/>\r\n                    </Grid.Column>\r\n                   </Grid.Row>\r\n               </Grid>\r\n           </Container>\r\n            );\r\n        }\r\n    }\r\n    function matchDispatchToProps(dispatch){\r\n        return bindActionCreators({\r\n            SetTempatureUnit:SetTempatureUnit,\r\n            SetTheme:SetTheme\r\n        },dispatch);\r\n    }\r\n    \r\n\r\nexport default connect(null,matchDispatchToProps)(Toggles);","import React from 'react';\r\nimport Menu from './Menu';\r\nimport Toggles from '../Toggles/Toggles';\r\n\r\nconst Header =()=>{\r\n    return(\r\n        <div className=\"ui container\">\r\n            <div className=\"ui header\" style={headerTitle}>\r\n                Herolo Weather Task\r\n            </div>\r\n            <Menu/>\r\n            <Toggles/>\r\n        </div>\r\n    )\r\n} \r\n\r\nconst headerTitle={\r\n    paddingTop:\"30px\",\r\n    margin: \"0 auto\",\r\n    display: \"block\",\r\n    fontFamily:\"Alatsi, sans-serif\",\r\n    fontSize:\"20px\"\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport Popup from 'react-popup';\r\n\r\nimport {GetGeoLocationAction}from \"../actions/LocationAction\";\r\nimport {GetCurrentWeatherAction,}from \"../actions/WeatherActions\";\r\nimport {GetFiveDayForeCastAction} from '../actions/GetDailyForecasrt';\r\nimport {GetAPISuccess} from \"../actions/APISuccess\";\r\nimport {GetAPIFailure} from \"../actions/APIFailed\";\r\nimport {GetGeoLocation,\r\n    GetCurrentWeather,\r\n    GetDailyForecastlocationKey,\r\n    GetDefaultLocation\r\n} from '../apis/APIData';\r\nimport {SetLocaionObject,\r\n    SetWeatherObject,\r\n    SetForecastObject\r\n} from '../Additionals/Objects';\r\nimport Home from './Home/Home';\r\nimport Favorites from './Favorites/Favorites';\r\nimport Header from './Layout/Header';\r\nimport '../styles/App.css';\r\n\r\nclass App extends React.Component{\r\n    \r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position)=>{\r\n                this.GetUserLocation(position.coords.latitude,position.coords.longitude)\r\n                return\r\n            },\r\n            ()=>{\r\n                var UserLocation=GetDefaultLocation();\r\n                this.CreateLocationObject(UserLocation);\r\n            }  \r\n        )\r\n    };\r\n\r\n    handleWithAPIError=(error)=>{\r\n        this.props.GetAPIFailure();\r\n        Popup.alert('Sorry, but the API request reached the 50 per day limit :(');\r\n        }\r\n\r\n    GetUserLocation=async(lat,long)=>{\r\n       var UserLocationObject=await fetch(GetGeoLocation(lat,long))\r\n       .then(response=>response.json())\r\n       .catch(error=>this.handleWithAPIError(error))\r\n        this.CreateLocationObject(UserLocationObject);\r\n    }\r\n\r\n    CreateLocationObject=(UserLocationObject)=>{\r\n        if(UserLocationObject)\r\n        {\r\n            var key=UserLocationObject.Key;\r\n            var name=UserLocationObject.LocalizedName;\r\n            var contryName=UserLocationObject.Country.LocalizedName;\r\n            var isFavorite=UserLocationObject.isFavorite;\r\n            var LocationObject= SetLocaionObject(key,name,contryName,isFavorite);\r\n        }\r\n        this.props.GetGeoLocationAction(LocationObject);\r\n        this.GetCurrentWeatherByLocation(UserLocationObject.Key);\r\n\r\n    };\r\n\r\n    GetCurrentWeatherByLocation=async(locationKey)=>{\r\n        var CurrentWeatherObject=await fetch(GetCurrentWeather(locationKey))\r\n        .then(response=>response.json())\r\n        .catch(error=>this.handleWithAPIError(error))\r\n       this.CreateWeatherObject(CurrentWeatherObject,locationKey);\r\n\r\n    };\r\n\r\n    CreateWeatherObject=(CurrentWeatherObject=null,locationKey)=>{\r\n        if(CurrentWeatherObject)\r\n        {\r\n            var WeatherText=CurrentWeatherObject[0].WeatherText;\r\n            var WeatherIcon=CurrentWeatherObject[0].WeatherIcon;\r\n            var MetricVal=CurrentWeatherObject[0].Temperature.Metric.Value;\r\n            var ImperialVal=CurrentWeatherObject[0].Temperature.Imperial.Value;\r\n            var WeatherObject= SetWeatherObject(WeatherText,WeatherIcon,MetricVal,ImperialVal);\r\n        }\r\n        this.props.GetCurrentWeatherAction(WeatherObject);\r\n        this.GetCurrentWeatherForecast(locationKey)\r\n    };\r\n\r\n\r\n    GetCurrentWeatherForecast=async(locationKey)=>{\r\n        var ForecastObject=await fetch(GetDailyForecastlocationKey(locationKey))\r\n        .then(response=>response.json())\r\n        .catch(error=>this.handleWithAPIError(error))\r\n       this.CreateForecastObject(ForecastObject);\r\n    };\r\n\r\n    CreateForecastObject=(Forecast)=>{\r\n        if(Forecast)\r\n        {\r\n            var Headline=Forecast.Headline;\r\n            var DailyForecasts=Forecast.DailyForecasts;\r\n            var ForecastObject= SetForecastObject(Headline,DailyForecasts);\r\n        }\r\n        else{\r\n            ForecastObject= SetForecastObject();\r\n        }\r\n        this.props.GetAPISuccess();\r\n        this.props.GetFiveDayForeCastAction(ForecastObject);\r\n        this.renderContent();\r\n    }\r\n\r\n    renderContent=()=>{\r\n        return(\r\n            <Router>\r\n                <div className={\"frontPage_\" + (this.props.Theme?'dark':'light')}>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route exact path =\"/\" render={(props) => <Home {...props} \r\n                        CreateLocationObject={this.CreateLocationObject}\r\n                        GetAPIFailure={this.props.GetAPIFailure} />}/>\r\n                        <Route exact path =\"/Favorites\" render={(props) => <Favorites {...props} CreateLocationObject={this.CreateLocationObject} />}/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );  \r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                {this.renderContent()}      \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({\r\n        GetGeoLocationAction:GetGeoLocationAction,\r\n        GetCurrentWeatherAction:GetCurrentWeatherAction,\r\n        GetFiveDayForeCastAction:GetFiveDayForeCastAction,\r\n        GetAPISuccess:GetAPISuccess,\r\n        GetAPIFailure:GetAPIFailure\r\n\r\n    },dispatch);\r\n}\r\n\r\nfunction mapsStateToProps(state){\r\n        return{\r\n            Theme:state.Theme\r\n        }\r\n     }\r\n    \r\n\r\nexport default connect(mapsStateToProps,matchDispatchToProps)(App);","\r\nconst INITIAL_STATE={\r\n    WeatherText:'',\r\n    WeatherIcon:null,\r\n    Temperature:{\r\n        Metric:{\r\n            Value:null,\r\n            Unit:\"C\",\r\n            UnitType:null\r\n        },\r\n        Imperial:{\r\n            Value:null,\r\n            Unit:\"F\",\r\n            UnitType:null\r\n        }\r\n    },\r\n}\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case 'GET_CURRENT_WEATHER':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nconst INITIAL_STATE={\r\n    key:'',\r\n    cityName:' ',\r\n    contryName:'',\r\n    Latitude:null,\r\n    Longitude:null,\r\n    isFavorite:null,\r\n}\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        \r\n        case 'GET_GEO_LOCATION':\r\n            return action.payload;\r\n        case 'ADD_TO_FAVORITES': \r\n             Object.assign(state,  {\r\n            isFavorite: true\r\n        });\r\n        return state;\r\n        case 'REMOVE_FROM_FAVORITES':\r\n            if (state.Key === action.payload) {\r\n                 Object.assign(state, {\r\n                    isFavorite: false\r\n                });\r\n                return state;\r\n            } else {\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};","const INITIAL_STATE={\r\n    Headline:{},\r\n    DailyForecasts:[]\r\n }\r\n \r\n export default (state=INITIAL_STATE,action)=>{\r\n     switch(action.type){\r\n        \r\n        case 'GET_FIVE_DAY_FORECAST': \r\n            return action.payload;   \r\n \r\n         default:\r\n             return state;\r\n     };\r\n \r\n };","const INITIAL_STATE=[];\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case 'ADD_TO_FAVORITES': \r\n            return state.concat(action.payload);\r\n        case 'REMOVE_FROM_FAVORITES':\r\n            return state.filter(x=>action.payload!==x.key);    \r\n        default:\r\n            return state;\r\n    };\r\n};","import {combineReducers} from 'redux';\r\nimport WeatherReducer from './WeatherReducer';\r\nimport LocationReducer from './LocationReducer';\r\nimport APIstate from './APIstate';\r\nimport ForecastReducer from './ForecastReducer';\r\nimport favoriteReducer from './favoriteReducer';\r\nimport TemptureReducer from './TemptureReducer';\r\nimport ThemeReducer from './ThemeReducer';\r\n\r\nexport default combineReducers({\r\n    Weather:WeatherReducer,\r\n    Location:LocationReducer,\r\n    APIstate:APIstate,\r\n    Forecast:ForecastReducer,\r\n    Favorites:favoriteReducer,\r\n    TempatureUnit:TemptureReducer,\r\n    Theme:ThemeReducer\r\n});","export default (state='Loading',action)=>{\r\n    switch(action.type){\r\n        case 'FAILED':\r\n            return 'FAILED';\r\n        case 'SUCCESS':\r\n            return 'SUCCESS';\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","const INITIAL_STATE=false;\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case 'SET_TEMPATURE_UNIT': \r\n            return !state;   \r\n        default:\r\n            return state;\r\n    };\r\n};","const INITIAL_STATE=false;\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case 'SET_THEME': \r\n            return !state;   \r\n        default:\r\n            return state;\r\n    };\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider } from 'react-redux';\nimport {createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nReactDOM.render(\n    <Provider store={createStore(reducers, composeWithDevTools())}> \n        <App />\n    </Provider>,\ndocument.querySelector('#root')\n);\n\n"],"sourceRoot":""}